residue_m(_f, _z, _a) := block(
ratprint: false,
[res],
res: residue(_f, _z, _a),
if (notequal(res, 0))
    then return (res)
    else block(
        [],
        res: residue_simple(_f, _z, _a),
        if (not(member(infinity, list(res)))) and (not(member(und, list(res))))
           then return(res)
        else return ("the calculation has failed")
));



residue_lim(_f,_z,_a):=block(
[j,res,nmax,big,arg],
big:1000000,
nmax:10,
for j:1 thru nmax do (
    display(j),
    res:limit(diff((_z-_a)^j*_f,_z,j-1),_z,_a)/(j-1)!,
    arg:args(list(res)),
    if (not(member(infinity, arg)) 
       and not(member(und, arg)) 
       and(abs(res)<big))
    then return(res)),
return(und)
);


residue_simple(_f, _z, _a) := limit((_z - _a)*_f, _z, _a);
